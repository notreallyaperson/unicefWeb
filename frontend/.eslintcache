[{"/home/avinash/Qworky Apps/Unicef/WebApp/frontend/src/index.js":"1","/home/avinash/Qworky Apps/Unicef/WebApp/frontend/src/reportWebVitals.js":"2","/home/avinash/Qworky Apps/Unicef/WebApp/frontend/src/App.js":"3","/home/avinash/Qworky Apps/Unicef/WebApp/frontend/src/redux/store.js":"4","/home/avinash/Qworky Apps/Unicef/WebApp/frontend/src/pages/Statistics/Statistics.js":"5","/home/avinash/Qworky Apps/Unicef/WebApp/frontend/src/pages/Landing/Landing.js":"6","/home/avinash/Qworky Apps/Unicef/WebApp/frontend/src/pages/UserList/UserList.js":"7","/home/avinash/Qworky Apps/Unicef/WebApp/frontend/src/components/utils/requireAuth.js":"8","/home/avinash/Qworky Apps/Unicef/WebApp/frontend/src/pages/variables.js":"9","/home/avinash/Qworky Apps/Unicef/WebApp/frontend/src/redux/actions/userActions.js":"10","/home/avinash/Qworky Apps/Unicef/WebApp/frontend/src/redux/actions/authActions.js":"11","/home/avinash/Qworky Apps/Unicef/WebApp/frontend/src/pages/Statistics/BarChart/BarChart.js":"12","/home/avinash/Qworky Apps/Unicef/WebApp/frontend/src/pages/Statistics/TotalCard/TotalCard.js":"13","/home/avinash/Qworky Apps/Unicef/WebApp/frontend/src/pages/UserList/UserTable/UserTable.js":"14","/home/avinash/Qworky Apps/Unicef/WebApp/frontend/src/pages/UserList/UserModal/UserModal.js":"15","/home/avinash/Qworky Apps/Unicef/WebApp/frontend/src/components/NavBar/Navbar.js":"16","/home/avinash/Qworky Apps/Unicef/WebApp/frontend/src/redux/reducers/index.js":"17","/home/avinash/Qworky Apps/Unicef/WebApp/frontend/src/redux/types.js":"18","/home/avinash/Qworky Apps/Unicef/WebApp/frontend/src/redux/actions/errorActions.js":"19","/home/avinash/Qworky Apps/Unicef/WebApp/frontend/src/redux/helpers.js":"20","/home/avinash/Qworky Apps/Unicef/WebApp/frontend/src/pages/UserList/UserTable/ExportCSV/ExportCSV.js":"21","/home/avinash/Qworky Apps/Unicef/WebApp/frontend/src/components/NavBar/auth/LoginModal.js":"22","/home/avinash/Qworky Apps/Unicef/WebApp/frontend/src/components/NavBar/auth/Logout.js":"23","/home/avinash/Qworky Apps/Unicef/WebApp/frontend/src/components/NavBar/auth/RegisterModal.js":"24","/home/avinash/Qworky Apps/Unicef/WebApp/frontend/src/redux/reducers/authReducer.js":"25","/home/avinash/Qworky Apps/Unicef/WebApp/frontend/src/redux/reducers/errorReducer.js":"26","/home/avinash/Qworky Apps/Unicef/WebApp/frontend/src/redux/reducers/userReducer.js":"27"},{"size":500,"mtime":1608005282028,"results":"28","hashOfConfig":"29"},{"size":362,"mtime":1608005282028,"results":"30","hashOfConfig":"29"},{"size":1244,"mtime":1608006717194,"results":"31","hashOfConfig":"29"},{"size":547,"mtime":1608005499418,"results":"32","hashOfConfig":"29"},{"size":2904,"mtime":1608005493906,"results":"33","hashOfConfig":"29"},{"size":633,"mtime":1608005611137,"results":"34","hashOfConfig":"29"},{"size":1731,"mtime":1608007413065,"results":"35","hashOfConfig":"29"},{"size":1283,"mtime":1608005484338,"results":"36","hashOfConfig":"29"},{"size":737,"mtime":1608007153835,"results":"37","hashOfConfig":"29"},{"size":3024,"mtime":1608005499382,"results":"38","hashOfConfig":"29"},{"size":2864,"mtime":1608005499382,"results":"39","hashOfConfig":"29"},{"size":2323,"mtime":1608005493902,"results":"40","hashOfConfig":"29"},{"size":961,"mtime":1608005493906,"results":"41","hashOfConfig":"29"},{"size":2779,"mtime":1608007237831,"results":"42","hashOfConfig":"29"},{"size":2313,"mtime":1608005493918,"results":"43","hashOfConfig":"29"},{"size":1884,"mtime":1608007305534,"results":"44","hashOfConfig":"29"},{"size":300,"mtime":1608005499402,"results":"45","hashOfConfig":"29"},{"size":1087,"mtime":1608005499430,"results":"46","hashOfConfig":"29"},{"size":307,"mtime":1608005499382,"results":"47","hashOfConfig":"29"},{"size":133,"mtime":1608005499398,"results":"48","hashOfConfig":"29"},{"size":1826,"mtime":1608005493926,"results":"49","hashOfConfig":"29"},{"size":3720,"mtime":1608007337098,"results":"50","hashOfConfig":"29"},{"size":605,"mtime":1608005484334,"results":"51","hashOfConfig":"29"},{"size":4714,"mtime":1608005484338,"results":"52","hashOfConfig":"29"},{"size":2687,"mtime":1608005499402,"results":"53","hashOfConfig":"29"},{"size":527,"mtime":1608005499402,"results":"54","hashOfConfig":"29"},{"size":1658,"mtime":1608005499402,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1celny6",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"71"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"71"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"71"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"71"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"71"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"71"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"71"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},"/home/avinash/Qworky Apps/Unicef/WebApp/frontend/src/index.js",[],["124","125"],"/home/avinash/Qworky Apps/Unicef/WebApp/frontend/src/reportWebVitals.js",[],"/home/avinash/Qworky Apps/Unicef/WebApp/frontend/src/App.js",["126"],"import React, { Fragment } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\n//Import Redux Store and Provider\nimport store from './redux/store'\nimport { Provider } from 'react-redux';\n\n//React Router Dom used to create route paths for the web app\nimport { BrowserRouter, Route } from 'react-router-dom'\n\n//Import Authentication\nimport requireAuth from './components/utils/requireAuth'\n/*\nrequireAuth function takes 3 values, \nrequireAuth(Component, Require Authentication, Hidden)\nfor require Auhentication true will need user to be logged in\nfor Hidden true will hide navigation options in Navbar\n*/\n\n//Import Main Pages\nimport Landing from './pages/Landing/Landing'\nimport UserList from './pages/UserList/UserList'\nimport Statistics from './pages/Statistics/Statistics'\n\nfunction App() {\n  return (\n    <div style={{ margin: '10px' }}>\n      <Provider store={store}>\n        <BrowserRouter>\n          <Route path='/' exact component={requireAuth(Landing, false)} />\n          <Route path='/userlist' exact component={requireAuth(UserList, true, true)} />\n          <Route path='/statistics' exact component={requireAuth(Statistics, true, true)} />\n        </BrowserRouter>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","/home/avinash/Qworky Apps/Unicef/WebApp/frontend/src/redux/store.js",[],"/home/avinash/Qworky Apps/Unicef/WebApp/frontend/src/pages/Statistics/Statistics.js",["127"],"import React, { Fragment, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Card, CardBody, Col, Row } from 'reactstrap';\nimport { getUsers } from '../../redux/actions/userActions'\n\nimport './Statistics.css'\n\n//Import Components\nimport BarChart from './BarChart/BarChart'\nimport TotalCard from './TotalCard/TotalCard'\n\nfunction Statistics() {\n    const dispatch = useDispatch()\n    const { users } = useSelector(state => state.userReducer)\n    const [data, setData] = useState({})\n\n    useEffect(() => {\n        dispatch(getUsers())\n    }, [])\n\n    // Mapping User Data to create charts based on changed data\n    useEffect(() => {\n        if (users) {\n            var object = {\n                active: 0,\n                pending: 0,\n                suspended: 0,\n                expired: 0,\n            }\n            users.forEach(user => {\n                if (!object[user.status]) object[user.status] = 0\n                object[user.status]++\n            });\n            setData(object)\n        }\n    }, [users])\n    console.log(data)\n\n    return (\n        <Fragment>\n            <Row style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                <TotalCard\n                    titleEN='Active'\n                    count={data['active']}\n                    color='#000'\n                    backgroundColor='rgba(255, 99, 132, 0.6)'\n                />\n                <TotalCard\n                    titleEN='Pending'\n                    count={data['pending']}\n                    color='#000'\n                    backgroundColor='rgba(54, 162, 235, 0.6)'\n                />\n                <TotalCard\n                    titleEN='Suspended'\n                    count={data['suspended']}\n                    color='#000'\n                    backgroundColor='#ecd1a8'\n                />\n                <TotalCard\n                    titleEN='Expired'\n                    count={data['expired']}\n                    color='#000'\n                    backgroundColor='#b5ead6'\n                />\n                <TotalCard\n                    titleEN='Total'\n                    count={users.length}\n                    color='#000'\n                    backgroundColor='rgba(153, 102, 255, 0.6)'\n                />\n            </Row>\n            <br></br>\n            <Row>\n                <Col md='4' xs=\"12\" sm=\"6\">\n                    <Card>\n                        <CardBody>\n                            <center>\n                                <span>Members Break Down</span>\n                                <br></br>\n                                <br></br>\n                                <BarChart data={data} />\n                            </center>\n                        </CardBody>\n                    </Card>\n                </Col>\n            </Row>\n        </Fragment >\n    );\n}\n\nexport default Statistics;","/home/avinash/Qworky Apps/Unicef/WebApp/frontend/src/pages/Landing/Landing.js",[],["128","129"],"/home/avinash/Qworky Apps/Unicef/WebApp/frontend/src/pages/UserList/UserList.js",["130","131","132"],"import React, { Fragment, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Button, Table } from 'reactstrap'\n\nimport { getUsers } from '../../redux/actions/userActions'\n\n//Import Variables\nimport { defaultUser } from '../variables'\n\n//Import Components\nimport UserTable from './UserTable/UserTable'\nimport UserModal from './UserModal/UserModal'\n\nfunction UserList() {\n    const dispatch = useDispatch()\n\n    const [user, setUser] = useState(defaultUser)\n    const [addMode, setAddMode] = useState(false)\n\n    useEffect(() => {\n        dispatch(getUsers())\n    }, [])\n\n    const [userModal, setUserModal] = useState(false)\n    const openUserModal = (user = defaultUser, addMode = false) => {\n        setUserModal(!userModal)\n        setUser(user)\n        setAddMode(addMode)\n    }\n\n    const onChange = e => {\n        var object = { ...user }\n        const { id, value, name } = e.target\n        if (id) {\n            // To create an object if it doesn't exist yet\n            if (!object[id]) object[id] = {}\n            object[id] = { ...object[id], [name]: value }\n        } else {\n            object[name] = value\n        }\n        setUser(object)\n    }\n\n\n    return (\n        <Fragment>\n            <Button onClick={() => openUserModal(defaultUser, true)}>Add User</Button>\n            <br></br>\n            <br></br>\n            <UserModal\n                openUserModal={openUserModal}\n                userModal={userModal}\n                user={user}\n                onChange={onChange}\n                addMode={addMode}\n            />\n            <UserTable\n                openUserModal={openUserModal}\n            />\n        </Fragment>\n    );\n}\n\nexport default UserList;","/home/avinash/Qworky Apps/Unicef/WebApp/frontend/src/components/utils/requireAuth.js",["133"],"import React, { useEffect, Fragment } from 'react';\nimport { loadUser } from '../../redux/actions/authActions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nimport NavBar from '../NavBar/Navbar';\nimport Landing from '../../pages/Landing/Landing';\n\nconst requireAuth = (AuthComponent, requireAuth, admin, hidden) => {\n\tconst Authenticate = (props) => {\n\t\tconst dispatch = useDispatch();\n\t\tconst auth = useSelector((state) => state.authReducer);\n\t\tconst { isAuthenticated, isLoading, user } = auth;\n\n\t\tuseEffect(() => {\n\t\t\tdispatch(loadUser());\n\t\t}, []);\n\n\t\tif (user && user.user.status !== 'active')\n\t\t\treturn (\n\t\t\t\t<Fragment>\n\t\t\t\t\t<NavBar hidden={hidden} />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h2 style={{ textAlign: 'center' }}>User Disabled</h2>\n\t\t\t\t</Fragment>\n\t\t\t);\n\n\t\tif (admin) {\n\t\t\tif (user && user.user.permissionLevel !== 'Admin') {\n\t\t\t\treturn <Redirect to='/'></Redirect>;\n\t\t\t}\n\t\t}\n\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<div style={{ position: 'sticky', top: '0px', zIndex: '5' }}>\n\t\t\t\t\t<NavBar hidden={hidden} />\n\t\t\t\t</div>\n\t\t\t\t<br></br>\n\t\t\t\t{isAuthenticated || !requireAuth ? (\n\t\t\t\t\t<AuthComponent {...props} />\n\t\t\t\t) : (\n\t\t\t\t\t\t!isLoading && <Landing />\n\t\t\t\t\t)}\n\t\t\t</Fragment>\n\t\t);\n\t};\n\treturn Authenticate;\n};\n\nexport default requireAuth;\n","/home/avinash/Qworky Apps/Unicef/WebApp/frontend/src/pages/variables.js",[],"/home/avinash/Qworky Apps/Unicef/WebApp/frontend/src/redux/actions/userActions.js",[],"/home/avinash/Qworky Apps/Unicef/WebApp/frontend/src/redux/actions/authActions.js",["134","135","136","137"],"import axios from 'axios';\n\nimport {\n    USER_LOADED,\n    AUTH_ERROR,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT_SUCCESS,\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    RESET_SUCCESS,\n    RESET_FAIL,\n    USER_LOADING,\n    AUTH_LOADING,\n    CREATE_PASSWORD,\n} from '../types';\n\nimport { returnErrors, clearErrors } from './errorActions'\nimport { baseURL } from '../helpers'\n\n\nconst setLoading = () => dispatch => {\n    dispatch({\n        type: AUTH_LOADING\n    })\n}\n\n// Validate token and load user\nexport const loadUser = () => (dispatch, getState) => {\n    axios\n        .get(`${baseURL}/auth/user`, tokenConfig(getState))\n        .then((res) =>\n            dispatch({\n                type: USER_LOADED,\n                payload: res.data,\n            })\n        )\n        .catch((err) => {\n            dispatch(returnErrors(err.response.data, err.response.status, AUTH_ERROR));\n            dispatch({\n                type: AUTH_ERROR,\n            });\n        });\n};\n\n//Login User\n//@route api/auth/login\n// access public\nexport const login = ({ email, password }) => (dispatch) => {\n    dispatch(setLoading())\n    dispatch(clearErrors())\n    // Headers\n    const config = {\n        headers: {\n            'Content-Type': 'application/json',\n        },\n    };\n    //Request Body\n    const body = JSON.stringify({\n        email,\n        password,\n    });\n    axios\n        .post(`${baseURL}/auth/login`, body, config)\n        .then((res) =>\n            dispatch({\n                type: LOGIN_SUCCESS,\n                payload: res.data,\n            })\n        )\n        .catch((err) => {\n            dispatch(returnErrors(err.response.data, err.response.status, LOGIN_FAIL));\n            dispatch({\n                type: LOGIN_FAIL,\n            });\n        });\n};\n\n//Logout User\nexport const logout = () => {\n    return {\n        type: LOGOUT_SUCCESS,\n    };\n};\n\nexport const createPassword = requestBody => dispatch => {\n    dispatch(setLoading())\n    dispatch(clearErrors())\n    axios.post(`${baseURL}/auth/create-password`, requestBody)\n        .then(res => {\n            dispatch({\n                type: CREATE_PASSWORD,\n                payload: res.data\n            });\n        })\n        .catch((err) => {\n            dispatch(returnErrors(err.response.data, err.response.status, RESET_FAIL));\n            dispatch({\n                type: RESET_FAIL,\n            });\n        })\n}\n\n// Setup config/headers and token\nexport const tokenConfig = (getState) => {\n    //Get token from local storage.. refer to authReducer under src/reducers/index.js\n    const token = getState().authReducer.token;\n    // Headers\n    const config = {\n        headers: {\n            'Content-Type': 'application/json',\n        },\n    };\n    //if there is a token then add it to the header\n    if (token) {\n        config.headers['x-auth-token'] = token;\n    }\n\n    return config;\n};\n","/home/avinash/Qworky Apps/Unicef/WebApp/frontend/src/pages/Statistics/BarChart/BarChart.js",[],"/home/avinash/Qworky Apps/Unicef/WebApp/frontend/src/pages/Statistics/TotalCard/TotalCard.js",[],"/home/avinash/Qworky Apps/Unicef/WebApp/frontend/src/pages/UserList/UserTable/UserTable.js",["138","139","140","141"],"import React, { Fragment, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Table } from 'reactstrap'\nimport { deleteUser } from '../../../redux/actions/userActions'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrashAlt, faEdit, faInfoCircle } from '@fortawesome/free-solid-svg-icons'\nimport ExportCSV from './ExportCSV/ExportCSV'\n\n\nimport './UserTable.css'\n\n//Import Components\n\n\nfunction UserTable({ openUserModal }) {\n    const dispatach = useDispatch()\n    const { users } = useSelector(state => state.userReducer)\n\n    const onDelete = (id) => {\n        var confirm = window.confirm('Permanently delete this Member?')\n        if (confirm) dispatach(deleteUser(id))\n    }\n\n    return (\n        <Fragment>\n            <Table id='userList' size=\"sm\" responsive>\n                <thead>\n                    <tr>\n                        <th>ID</th>\n                        <th>Email</th>\n                        <th>Permission Level</th>\n                        <th>Status</th>\n                        <th style={{ maxWidth: '70px', minWidth: '70px' }}>\n                            <div style={{ display: 'inline', marginTop: '-10px' }}>\n                                <ExportCSV table='userList' filename={`User List ${new Date()}`} />\n                            </div>\n                        </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {users.map(user => {\n                        var personalDetailsFlag = user.personalDetails ? true : false\n                        var companyDetailsFlag = user.companyDetails ? true : false\n                        return <tr key={user._id}>\n                            <td>{user._id}</td>\n                            <td>{user.email}</td>\n                            <td>{user.permissionLevel}</td>\n                            <td>{user.status}</td>\n                            <td>\n                                <span\n                                    className='editButton'\n                                    onClick={() => openUserModal(user)}\n                                >\n                                    <FontAwesomeIcon icon={faEdit} />\n                                </span>{\" \"}\n                                <span\n                                    className='deleteButton'\n                                    onClick={() => onDelete(user._id)}\n                                >\n                                    <FontAwesomeIcon icon={faTrashAlt} />\n                                </span>\n                            </td>\n                        </tr>\n                    })}\n                </tbody>\n            </Table>\n        </Fragment >\n    );\n}\n\nexport default UserTable;","/home/avinash/Qworky Apps/Unicef/WebApp/frontend/src/pages/UserList/UserModal/UserModal.js",["142","143"],"import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, Alert, Label, Input, FormGroup } from 'reactstrap';\nimport { updateUser, setUpdated, addUser } from '../../../redux/actions/userActions'\nimport { modalInputs } from '../../variables'\n\nconst UserUpdate = ({ openUserModal, userModal, user, onChange, addMode }) => {\n  const dispatch = useDispatch()\n\n  const { message, id } = useSelector(state => state.errorReducer)\n  const { updated } = useSelector(state => state.userReducer)\n\n  useEffect(() => {\n    if (updated) {\n      dispatch(setUpdated(false))\n      openUserModal()\n    }\n  }, [updated])\n\n  const onSubmit = e => {\n    e.preventDefault()\n    if (addMode) {\n      console.log(user)\n      dispatch(addUser(user))\n    } else {\n      dispatch(updateUser(user))\n    }\n  }\n\n  if (!user) return null\n  return (\n    <div>\n      <Modal isOpen={userModal} toggle={() => openUserModal()}>\n        <ModalHeader toggle={() => openUserModal()}>{addMode ? 'Create New Member' : 'Update Member'}</ModalHeader>\n        <Form onSubmit={onSubmit}>\n          <ModalBody>\n            {id === 'USER_FAIL' && < Alert color='danger'>{typeof message === 'object' ? message.message : message}</Alert>}\n            {modalInputs.map(({ title, type, name, id = null, required = false, options = [] }) => {\n              if (addMode && !required) return null\n              return <FormGroup>\n                <Label>{title}</Label>\n                <Input\n                  type={type}\n                  value={id && user[id] ? user[id][name] : user[name]}\n                  name={name}\n                  id={id}\n                  required={required}\n                  onChange={onChange}\n                >\n                  {options.map((e, i) => <option key={e.value + i} value={e.value}>{e.name}</option>)}\n                </Input>\n              </FormGroup>\n            })}\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"primary\" type='submit'>{addMode ? 'Create Member' : 'Save'}</Button>{' '}\n            <Button color=\"secondary\" onClick={() => openUserModal()}>Close</Button>\n          </ModalFooter>\n        </Form>\n      </Modal>\n    </div >\n  );\n}\n\nexport default UserUpdate;","/home/avinash/Qworky Apps/Unicef/WebApp/frontend/src/components/NavBar/Navbar.js",["144","145","146","147","148","149"],"import React, { useState, Fragment } from 'react';\nimport { useSelector } from 'react-redux'\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n} from 'reactstrap';\n\nimport LoginModal from './auth/LoginModal'\nimport RegisterModal from './auth/RegisterModal'\nimport Logout from './auth/Logout'\n\nconst NavBar = (props) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n  const auth = useSelector((state) => state.authReducer);\n  const { isAuthenticated, isLoading, user } = auth;\n  const isAdmin = user && user.user.permissionLevel && user.user.permissionLevel === 'Admin'\n\n  return (\n    <Fragment>\n      <Navbar color=\"light\" light expand=\"md\">\n        {/* <NavbarBrand href=\"/\"><img src={require('')} style={{height: '30px'}}/></NavbarBrand> */}\n        <NavbarToggler onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"ml-auto\" navbar>\n            {\n              isAuthenticated // TO display different Navbars for each state\n                ? <Fragment>\n                  {isAdmin && <Fragment>\n                    <NavItem>\n                      <NavLink href=\"/userlist\">Member List</NavLink>\n                    </NavItem>\n                    <NavItem>\n                      <NavLink href=\"/statistics\">Statistics</NavLink>\n                    </NavItem>\n                  </Fragment>}\n                  <NavItem>\n                    <Logout />\n                  </NavItem>\n                </Fragment>\n                : !isLoading && <Fragment>\n                  <NavItem>\n                    <LoginModal />\n                  </NavItem>\n                </Fragment>\n            }\n\n          </Nav>\n        </Collapse>\n      </Navbar>\n    </Fragment>\n  );\n}\n\nexport default NavBar;","/home/avinash/Qworky Apps/Unicef/WebApp/frontend/src/redux/reducers/index.js",[],"/home/avinash/Qworky Apps/Unicef/WebApp/frontend/src/redux/types.js",[],"/home/avinash/Qworky Apps/Unicef/WebApp/frontend/src/redux/actions/errorActions.js",[],"/home/avinash/Qworky Apps/Unicef/WebApp/frontend/src/redux/helpers.js",[],"/home/avinash/Qworky Apps/Unicef/WebApp/frontend/src/pages/UserList/UserTable/ExportCSV/ExportCSV.js",["150"],"import React, { useState } from 'react'\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';  \nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFileExcel } from '@fortawesome/free-solid-svg-icons';\n\nconst ExportCSV = props => {\n    // const [tooltipVisibility, setTooltipVisibility] = useState(false)\n    const buttonText = <FontAwesomeIcon icon={faFileExcel}/>\n    return (\n        <div \n            // onMouseOver={() => setTooltipVisibility(true)}\n            // onMouseOut={() => setTooltipVisibility(false)}\n            style={{position: 'relative'}}\n        >\n            <ReactHTMLTableToExcel\n                className=\"exportButton\"  \n                table={props.table}  \n                filename={props.filename}\n                sheet=\"Sheet\"\n                buttonText={buttonText}\n            />\n            {/* <span\n                style={{\n                    visibility: tooltipVisibility\n                    ? 'visible'\n                    : 'hidden',\n                    padding: '8px',\n                    fontSize: '12px',\n                    zIndex: '1',\n                    borderRadius: '2px',\n                    position: 'absolute',\n                    color: '#fff',\n                    lineHeight: '130%',\n                    width: '90px',\n                    overflow: 'hidden',\n                    left: '105%',\n                    top: '0',\n                    backgroundColor: '#323232',\n                    borderRadius: '10px',\n                    whiteSpace: 'pre-wrap',\n                }}>\n                    <center>\n                        <b style={{ lineHeight: '130%' }}>\n                            Export Table\n                        </b>\n                    </center>\n            </span> */}\n        </div>\n    )\n}\n\nexport default ExportCSV","/home/avinash/Qworky Apps/Unicef/WebApp/frontend/src/components/NavBar/auth/LoginModal.js",["151","152","153","154","155"],"import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    NavLink,\n    Alert\n} from 'reactstrap'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSignInAlt } from '@fortawesome/free-solid-svg-icons'\n\n//Import Redux Actions\nimport { login } from '../../../redux/actions/authActions'\nimport { Redirect } from 'react-router-dom';\n\n\nconst LoginModal = props => {\n    const [modal, setModal] = useState()\n    const [errorMessage, setErrorMessage] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const dispatch = useDispatch();\n    const { isAuthenticated, authLoading } = useSelector((state) => state.authReducer);\n    const { message, id } = useSelector((state) => state.errorReducer);\n\n    const [visiblePassword, setVisiblePassword] = useState(false);\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        // create a user object\n        const user = {\n            email: email.toLowerCase(),\n            password,\n        };\n        //Attempt to Register\n        dispatch(login(user));\n    };\n\n    // If parameters are provided use email\n    useEffect(() => {\n        const queryString = window.location.search;\n\t\tconst urlParams = new URLSearchParams(queryString).get('email');\n        setEmail(urlParams);\n        if(urlParams){\n            toggle()\n        }\n    }, [])\n\n    // Redirect if logged in\n    if (isAuthenticated) {\n        return <Redirect to='/userlist' />;\n    }\n\n    // Function to open and close login modal\n    const toggle = () => {\n        setModal(!modal)\n    }\n\n    return (\n        <div>\n            <NavLink\n                onClick={toggle}\n                href=\"#\"\n            >\n                <FontAwesomeIcon icon={faSignInAlt} /> Login\n            </NavLink>\n\n            <Modal\n                isOpen={modal}\n                toggle={toggle}\n            >\n                <ModalHeader\n                    toggle={toggle}\n                >\n                    Login\n                </ModalHeader>\n                <ModalBody>\n                    {message && id === 'LOGIN_FAIL' && <Alert color=\"danger\">{message.message}</Alert>}\n                    <Form onSubmit={onSubmit}>\n                        <FormGroup>\n                            <Label>Email</Label>\n                            <Input\n                                type=\"email\"\n                                defaultValue={email}\n                                onChange={e => setEmail(e.target.value)}\n                                required\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"password\" >Passwort</Label>\n                            <Input\n                                type=\"password\"\n                                defaultValue={password}\n                                onChange={e => setPassword(e.target.value)}\n                                required\n                            />\n                        </FormGroup>\n                        {/* <a href=\"/resetpassword\" >Passwort vergessen</a> */}\n                        <Button\n                            color=\"dark\"\n                            style={{ marginTop: \"2rem\" }}\n                            block\n                            disabled={authLoading}\n                        >\n                            Login\n                        </Button>\n                    </Form>\n                </ModalBody>\n            </Modal>\n        </div>\n    )\n}\n\nexport default LoginModal","/home/avinash/Qworky Apps/Unicef/WebApp/frontend/src/components/NavBar/auth/Logout.js",[],"/home/avinash/Qworky Apps/Unicef/WebApp/frontend/src/components/NavBar/auth/RegisterModal.js",["156"],"import React, {useState} from 'react';\nimport axios from 'axios'\nimport {\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    NavLink,\n    Alert\n} from 'reactstrap'\nimport { Redirect } from 'react-router-dom'\n\nconst RegisterModal = props => {\n    const [modal, setModal] = useState()\n    const [redirect, setRedirect] = useState(false)\n    const [errorMessage, setErrorMessage] = useState('')\n    const [email, setEmail] = useState('')\n    const [name, setName] = useState('')\n    const [password, setPassword] = useState('')\n    const [password2, setPassword2] = useState('')\n\n    // To Redirect to the home page when login 2 paths in which causes an error\n    if(redirect){\n        return <Redirect to={{\n            pathname: '/',\n            state: { requireRefresh: true }\n        }} /> \n    }\n\n    // Function to open and close login modal\n    const toggle = () => {\n        setModal(!modal)\n    }\n\n    // Login Function\n    const submitRegister = async e => {\n        e.preventDefault()\n        const registerDetails = {\n            name,\n            email,\n            password,\n            password2\n        }\n        await axios.post('api/auth/register',registerDetails)\n        .then(res => {\n            toggle()\n            localStorage.setItem('token', res.data.token)\n            props.setAuthenticated(true)\n        })\n        .catch(err => {\n            localStorage.clear()\n            setErrorMessage(err.response.data.message)\n        })\n    }\n\n        return (\n            <div>\n                <NavLink\n                    onClick={toggle}\n                    href = \"#\"\n                >\n                    Register\n                </NavLink>\n\n                <Modal\n                    isOpen={modal}\n                    toggle={toggle}\n                >\n                    <ModalHeader\n                        toggle={toggle}\n                    >\n                        Register\n                    </ModalHeader>\n                    <ModalBody>\n                        {errorMessage&&<Alert color=\"danger\">{errorMessage}</Alert>}\n                        <Form onSubmit={submitRegister}>\n                            <FormGroup>\n                                <Label>Full Name</Label>\n                                <Input \n                                    type = \"text\"\n                                    placeholder = \"Full Name\"\n                                    defaultValue={name}\n                                    onChange = {e => setName(e.target.value)}\n                                    required\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label>Email</Label>\n                                <Input \n                                    type = \"email\"\n                                    placeholder = \"Requires Unique Email\"\n                                    defaultValue={email}\n                                    onChange = {e => setEmail(e.target.value)}\n                                    required\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for = \"password\" >Password</Label>\n                                <Input \n                                    type = \"password\"\n                                    placeholder = \"Password\"\n                                    defaultValue={password}\n                                    onChange = {e => setPassword(e.target.value)}\n                                    required\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for = \"password2\" >Confirm Password</Label>\n                                <Input \n                                    type = \"password\"\n                                    placeholder = \"Confirm Password\"\n                                    defaultValue={password2}\n                                    onChange = {e => setPassword2(e.target.value)}\n                                    required\n                                />\n                            </FormGroup>\n                            <Button\n                                color= \"dark\"\n                                style = {{marginTop: \"2rem\"}}\n                                block\n                            >\n                                Register\n                            </Button>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n            </div>\n        )\n}\n\nexport default RegisterModal","/home/avinash/Qworky Apps/Unicef/WebApp/frontend/src/redux/reducers/authReducer.js",[],["157","158"],"/home/avinash/Qworky Apps/Unicef/WebApp/frontend/src/redux/reducers/errorReducer.js",[],"/home/avinash/Qworky Apps/Unicef/WebApp/frontend/src/redux/reducers/userReducer.js",[],{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","severity":1,"message":"164","line":1,"column":17,"nodeType":"165","messageId":"166","endLine":1,"endColumn":25},{"ruleId":"167","severity":1,"message":"168","line":19,"column":8,"nodeType":"169","endLine":19,"endColumn":10,"suggestions":"170"},{"ruleId":"159","replacedBy":"171"},{"ruleId":"161","replacedBy":"172"},{"ruleId":"163","severity":1,"message":"173","line":2,"column":23,"nodeType":"165","messageId":"166","endLine":2,"endColumn":34},{"ruleId":"163","severity":1,"message":"174","line":3,"column":18,"nodeType":"165","messageId":"166","endLine":3,"endColumn":23},{"ruleId":"167","severity":1,"message":"168","line":22,"column":8,"nodeType":"169","endLine":22,"endColumn":10,"suggestions":"175"},{"ruleId":"167","severity":1,"message":"168","line":17,"column":6,"nodeType":"169","endLine":17,"endColumn":8,"suggestions":"176"},{"ruleId":"163","severity":1,"message":"177","line":9,"column":5,"nodeType":"165","messageId":"166","endLine":9,"endColumn":21},{"ruleId":"163","severity":1,"message":"178","line":10,"column":5,"nodeType":"165","messageId":"166","endLine":10,"endColumn":18},{"ruleId":"163","severity":1,"message":"179","line":11,"column":5,"nodeType":"165","messageId":"166","endLine":11,"endColumn":18},{"ruleId":"163","severity":1,"message":"180","line":13,"column":5,"nodeType":"165","messageId":"166","endLine":13,"endColumn":17},{"ruleId":"163","severity":1,"message":"181","line":1,"column":27,"nodeType":"165","messageId":"166","endLine":1,"endColumn":36},{"ruleId":"163","severity":1,"message":"182","line":6,"column":30,"nodeType":"165","messageId":"166","endLine":6,"endColumn":42},{"ruleId":"163","severity":1,"message":"183","line":42,"column":29,"nodeType":"165","messageId":"166","endLine":42,"endColumn":48},{"ruleId":"163","severity":1,"message":"184","line":43,"column":29,"nodeType":"165","messageId":"166","endLine":43,"endColumn":47},{"ruleId":"163","severity":1,"message":"185","line":1,"column":28,"nodeType":"165","messageId":"166","endLine":1,"endColumn":36},{"ruleId":"167","severity":1,"message":"186","line":18,"column":6,"nodeType":"169","endLine":18,"endColumn":15,"suggestions":"187"},{"ruleId":"163","severity":1,"message":"188","line":7,"column":3,"nodeType":"165","messageId":"166","endLine":7,"endColumn":14},{"ruleId":"163","severity":1,"message":"189","line":11,"column":3,"nodeType":"165","messageId":"166","endLine":11,"endColumn":23},{"ruleId":"163","severity":1,"message":"190","line":12,"column":3,"nodeType":"165","messageId":"166","endLine":12,"endColumn":17},{"ruleId":"163","severity":1,"message":"191","line":13,"column":3,"nodeType":"165","messageId":"166","endLine":13,"endColumn":15},{"ruleId":"163","severity":1,"message":"192","line":14,"column":3,"nodeType":"165","messageId":"166","endLine":14,"endColumn":15},{"ruleId":"163","severity":1,"message":"193","line":18,"column":8,"nodeType":"165","messageId":"166","endLine":18,"endColumn":21},{"ruleId":"163","severity":1,"message":"185","line":1,"column":17,"nodeType":"165","messageId":"166","endLine":1,"endColumn":25},{"ruleId":"163","severity":1,"message":"194","line":26,"column":12,"nodeType":"165","messageId":"166","endLine":26,"endColumn":24},{"ruleId":"163","severity":1,"message":"195","line":26,"column":26,"nodeType":"165","messageId":"166","endLine":26,"endColumn":41},{"ruleId":"163","severity":1,"message":"196","line":34,"column":12,"nodeType":"165","messageId":"166","endLine":34,"endColumn":27},{"ruleId":"163","severity":1,"message":"197","line":34,"column":29,"nodeType":"165","messageId":"166","endLine":34,"endColumn":47},{"ruleId":"167","severity":1,"message":"198","line":55,"column":8,"nodeType":"169","endLine":55,"endColumn":10,"suggestions":"199"},{"ruleId":"163","severity":1,"message":"200","line":19,"column":22,"nodeType":"165","messageId":"166","endLine":19,"endColumn":33},{"ruleId":"159","replacedBy":"201"},{"ruleId":"161","replacedBy":"202"},"no-native-reassign",["203"],"no-negated-in-lhs",["204"],"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["205"],["203"],["204"],"'useSelector' is defined but never used.","'Table' is defined but never used.",["206"],["207"],"'REGISTER_SUCCESS' is defined but never used.","'REGISTER_FAIL' is defined but never used.","'RESET_SUCCESS' is defined but never used.","'USER_LOADING' is defined but never used.","'useEffect' is defined but never used.","'faInfoCircle' is defined but never used.","'personalDetailsFlag' is assigned a value but never used.","'companyDetailsFlag' is assigned a value but never used.","'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'openUserModal'. Either include them or remove the dependency array. If 'openUserModal' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["208"],"'NavbarBrand' is defined but never used.","'UncontrolledDropdown' is defined but never used.","'DropdownToggle' is defined but never used.","'DropdownMenu' is defined but never used.","'DropdownItem' is defined but never used.","'RegisterModal' is defined but never used.","'errorMessage' is assigned a value but never used.","'setErrorMessage' is assigned a value but never used.","'visiblePassword' is assigned a value but never used.","'setVisiblePassword' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'toggle'. Either include it or remove the dependency array.",["209"],"'setRedirect' is assigned a value but never used.",["203"],["204"],"no-global-assign","no-unsafe-negation",{"desc":"210","fix":"211"},{"desc":"210","fix":"212"},{"desc":"210","fix":"213"},{"desc":"214","fix":"215"},{"desc":"216","fix":"217"},"Update the dependencies array to be: [dispatch]",{"range":"218","text":"219"},{"range":"220","text":"219"},{"range":"221","text":"219"},"Update the dependencies array to be: [dispatch, openUserModal, updated]",{"range":"222","text":"223"},"Update the dependencies array to be: [toggle]",{"range":"224","text":"225"},[590,592],"[dispatch]",[614,616],[605,607],[709,718],"[dispatch, openUserModal, updated]",[1537,1539],"[toggle]"]